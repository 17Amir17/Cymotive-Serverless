service: cymotive-service

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: api
  region: eu-west-1

resources:
  Resources:
    ReportsBucket: ${file(resources/ReportsBucket.yml):ReportsBucket}
    ReportsBucketPolicy: ${file(resources/ReportsBucket.yml):ReportsBucketPolicy}
    ReportsTable: ${file(resources/ReportsTable.yml):ReportsTable}
    PorterRole: ${file(iam/PorterRole.yml):PorterRole}
    IngestRole: ${file(iam/IngestRole.yml):IngestRole}
    AnalyzerRole: ${file(iam/AnalyzerRole.yml):AnalyzerRole}
  Outputs:
    ReportsBucket:
      Value:
        Ref: ReportsBucket
    ReportsTable:
      Value:
        Ref: ReportsTable

functions:
  porter:
    handler: src/handlers/porter.handler
    environment:
      BUCKET_NAME: ${self:custom.ReportsBucket.name}
      BUCKET_ARN: ${self:custom.ReportsBucket.arn}
    role: PorterRole
    events:
      - http:
          method: POST
          path: /
  ingest:
    handler: src/handlers/ingest.handler
    environment:
      TABLE_NAME: ${self:custom.ReportsTable.name}
    role: IngestRole
    events:
      - s3:
          bucket: ${self:custom.ReportsBucket.name}
          event: s3:ObjectCreated:*
          existing: true
  analyzer:
    handler: src/handlers/analyzer.handler
    environment:
      TABLE_NAME: ${self:custom.ReportsTable.name}
    role: AnalyzerRole
    events:
      - http:
          method: GET
          path: /numberOfReports
      - http:
          method: GET
          path: /numberOfVehicles
      - http:
          method: GET
          path: /numberOfAnomalies

 

custom:
  ReportsBucket:
    name: !Ref ReportsBucket
    arn: !GetAtt ReportsBucket.Arn
  ReportsTable:
    name: !Ref ReportsTable
    arn: !GetAtt ReportsTable.Arn
  bundle:
    linting: false
    externals:
      - uuid